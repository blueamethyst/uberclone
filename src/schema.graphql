type Chat {
  id: Int!
  messages: [Message]!
  participants: [User]!
  createAt: String!
  updateAt: String
}

type Message {
  id: Int!
  text: String!
  chat: Chat!
  user: User!
  createAt: String!
  updateAt: String
}

type Place {
  id: Int!
  ame: String!
  lat: Float!
  lng: Float!
  address: String!
  isFav: Boolean!
  createAt: String!
  updateAt: String
}

type Ride {
  id: Int!
  status: String!
  pickUpAddress: String!
  pickUpLat: Float!
  pickUpLng: Float!
  dropOffAddress: String!
  dropOffLat: Float!
  dropOffLng: Float!
  price: Float!
  distance: String!
  duration: String!
  createAt: String!
  updateAt: String
  driver: User!
  passenger: User!
}

type CompletePhoneVerificationResponse {
  ok: Boolean!
  error: String
  token: String
}

type Mutation {
  CompletePhoneVerification(phoneNumber: String!, key: String!): CompletePhoneVerificationResponse!
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  EmailSignUp(firstName: String!, lastName: String!, email: String!, password: String!, profilePhoto: String!, age: Int!, phoneNumber: String!): EmailSignUpResponse!
  FacebookConnect(firstName: String!, lastName: String!, email: String!, fbId: String!): FacebookConnectResponse!
  StartPhoneVerification(phoneNumber: String!): StartPhoneVerificationResponse
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type FacebookConnectResponse {
  ok: Boolean!
  error: String
  token: String
}

type User {
  id: Int!
  email: String
  verifiedEmail: Boolean!
  firstName: String!
  lastName: String!
  age: Int
  password: String
  phoneNumber: String
  verifiedPhoneNumber: Boolean!
  profilePhoto: String
  createAt: String!
  updateAt: String
  fullName: String
  isDriving: Boolean!
  isRiding: Boolean!
  isTaken: Boolean!
  lastLng: Float
  lastLat: Float
  lastOrientation: Float
  chat: Chat
  message: [Message]
  verifications: [Verification]
  rideAsPassenger: [Ride]
  rideAsDriver: [Ride]
  fbId: String
}

type Query {
  user: User
}

type StartPhoneVerificationResponse {
  ok: Boolean!
  error: String
}

type Verification {
  id: Int!
  target: String!
  payload: String!
  key: String!
  user: User!
  verified: Boolean!
  createAt: String!
  updateAt: String
}
